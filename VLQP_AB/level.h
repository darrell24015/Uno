#ifndef LEVEL_H
#define LEVEL_H

#include <Arduino.h>
#include "globals.h"
#include "bitmaps.h"
#include "door.h"

// constants /////////////////////////////////////////////////////////////////

#define LEVEL_WIDTH               512
#define LEVEL_HEIGHT              256

#define LEVEL_BLOCK_WIDTH         8
#define LEVEL_BLOCK_HEIGHT        4

#define BLOCK_WIDTH               8
#define BLOCK_HEIGHT              8

#define TILE_WIDTH                8
#define TILE_HEIGHT               8

#define FONT_TINY                 0
#define FONT_SMALL                1
#define FONT_BIG                  2

#define DATA_TIMER                0
#define DATA_SCORE                1
#define DATA_LEVEL                2

#define BLOCK_OFFSET              64
#define LEVEL_OFFSET              16

#define NUM_MAPS                  16
#define LEVEL_TO_START_WITH       1         // normal game starts with level 1

// method prototypes /////////////////////////////////////////////////////////


void drawLevel();
unsigned char getTileType(unsigned int x, unsigned int y);
void drawNumbers(byte NumbersX, byte NumbersY, byte fontType, byte timerOrScoreOrLevel);
void mapCollide(int& x, int& y, bool horizontal, char& vel, char w, char h);

extern Door exitDoor;


// data //////////////////////////////////////////////////////////////////////


// format: <survivor1x> <survivor1y> <survivor2x> <survivor2y> <survivor3x> <survivor3y> <survivor4x> <survivor4y> <survivor5x> <survivor5y>
PROGMEM const unsigned char survivorLocation[] = {
  24, 29,  4, 12, 47, 11,  2, 28, 58, 28, // MAP00
  31, 25,  3,  6, 60,  2, 12, 18, 45, 12, // MAP01
  38, 16, 16, 22, 50,  4,  2, 28, 56, 25, // MAP02
  47,  9, 19, 23, 60,  2,  8, 16, 28, 14, // MAP03
  55, 14,  6,  2, 44,  2,  2, 27, 18, 18, // MAP04
  59, 15,  2,  9, 45, 10, 11, 23, 28, 20, // MAP05
  60,  2,  2,  2, 33,  2,  2, 28, 59, 27, // MAP06
  42, 10,  4, 10, 31, 18, 20, 20, 46, 27, // MAP07
  8 ,  5, 52, 20, 35, 20, 16, 10, 58,  2, // MAP08
  57, 27, 19, 10, 37,  3, 59,  2,  2, 10, // MAP09
  56,  2, 41, 28,  2,  2, 40,  2, 23, 28, // MAP10
  60, 28, 42, 10,  2,  2, 21, 20, 36, 28, // MAP11
  60,  2, 51, 19, 35, 12,  2, 28,  2,  2, // MAP12
  18,  2,  5,  2, 29, 28, 51, 23, 38,  2, // MAP13
  55, 15, 24, 10, 44, 10,  2,  5,  2, 18, // MAP14
  34,  2,  2, 28, 29, 12, 60, 28,  2,  2, // MAP15
};


//format: <player x> <player y> <exit x> <exit y>
PROGMEM const unsigned char playerAndExitLocation[] =
{
  // first run
  56, 23, 21,  0,  //LEVEL01
  23, 10,  0, 18,  //LEVEL02
  2 ,  2, 62, 23,  //LEVEL03
  19,  7, 55,  0,  //LEVEL04
  31,  2,  0, 21,  //LEVEL05
  34, 10, 38, 30,  //LEVEL06
  55, 13, 56,  0,  //LEVEL07
  25, 13, 62, 28,  //LEVEL08
  36, 20, 18, 30,  //LEVEL09
  48, 13,  7,  0,  //LEVEL10
  5 , 21, 43,  0,  //LEVEL11
  4 ,  3,  2,  0,  //LEVEL12
  10, 20, 29,  0,  //LEVEL13
  44, 28,  0, 28,  //LEVEL14
  44, 10, 24, 30,  //LEVEL15
  29, 12, 50,  0,  //LEVEL16

  //second run
  2 , 28, 62, 28,  //LEVEL17
  36,  9, 36,  0,  //LEVEL18
  53, 22, 30, 30,  //LEVEL19
  26, 11, 62, 22,  //LEVEL20
  7 , 24, 56,  0,  //LEVEL21
  11, 23, 62, 28,  //LEVEL22
  14, 24,  0, 18,  //LEVEL23
  59,  2, 13, 30,  //LEVEL24
  17, 17,  2,  0,  //LEVEL25
  60,  2, 48, 30,  //LEVEL26
  60, 28, 26,  0,  //LEVEL27
  20, 20, 35,  0,  //LEVEL28
  3 ,  5,  3,  0,  //LEVEL29
  59, 28, 44, 30,  //LEVEL30
  9 , 11,  0, 11,  //LEVEL31
  50, 21,  0,  6,  //LEVEL32

  //third run
  17,  7, 59,  0,  //LEVEL33
  56, 22,  2, 30,  //LEVEL34
  24,  4,  0, 14,  //LEVEL35
  34, 20, 21,  0,  //LEVEL36
  21, 12, 25, 30,  //LEVEL37
  28, 20, 27,  0,  //LEVEL38
  51, 24, 62, 28,  //LEVEL39
  59, 28,  0,  3,  //LEVEL40
  59,  2, 62,  2,  //LEVEL41
  3 ,  5,  0, 28,  //LEVEL42
  24,  2, 17, 30,  //LEVEL43
  32, 25, 10,  0,  //LEVEL44
  11, 20,  3,  0,  //LEVEL45
  38,  2,  0, 27,  //LEVEL46
  2 , 18, 62, 28,  //LEVEL47
  2 ,  2, 62,  4,  //LEVEL48

  //fourth run
  35, 17, 19, 30,  //LEVEL49
  12, 13, 62, 12,  //LEVEL50
  23, 10, 43,  0,  //LEVEL51
  60, 28,  0,  7,  //LEVEL52
  43, 27, 31,  0,  //LEVEL53
  20,  6, 38, 30,  //LEVEL54
  31, 15, 26, 30,  //LEVEL55
  31, 12, 12,  0,  //LEVEL56
  2 , 28, 62, 28,  //LEVEL57
  31, 11,  8,  0,  //LEVEL58
  2 , 28, 62, 28,  //LEVEL59
  10,  2, 42, 30,  //LEVEL60
  25,  3, 10,  0,  //LEVEL61
  6 , 25, 58,  0,  //LEVEL62
  44, 28, 59,  0,  //LEVEL63
  59,  2, 18,  0,  //LEVEL64
};




PROGMEM const unsigned char blocks[16][64] = {
  {
    //BLOCK 00
    11, 11, 11, 11, 11, 11, 11, 11,
    11,  6,  6,  6,  6,  6,  6,  6,
    11,  0,  0,  0,  0,  0,  0,  0,
    11,  0,  0,  0,  1,  0,  0,  0,
    11,  0,  1,  0,  0,  0,  1,  0,
    11,  0,  0,  0,  1,  0,  0,  0,
    11,  0,  1,  0,  0,  0,  4,  0,
    11,  0,  0,  0,  1,  0,  0,  0,
  }, {
    // BLOCK 01
    11, 11, 11, 11, 11, 11, 11, 11,
    6 , 6 , 6 , 6 , 6 , 6 , 6 , 6,
    0 , 0 , 0 , 0 , 0 , 0 , 0 , 0,
    3 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
    0 , 0 , 1 , 0 , 0 , 0 , 1 , 0,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
    0 , 0 , 1 , 0 , 0 , 0 , 1 , 0,
    1 , 0 , 0 , 0 , 3 , 0 , 0 , 0,
  }, {
    // BLOCK 02
    11, 11, 11, 11, 11, 11, 11, 11,
    6 , 6 , 6 , 6 , 6 , 6 , 6 , 11,
    0 , 0 , 0 , 0 , 0 , 0 , 0 , 11,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
    0 , 0 , 4 , 0 , 0 , 0 , 0 , 11,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
    0 , 0 , 1 , 0 , 0 , 0 , 0 , 11,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
  }, {
    // BLOCK 03
    11, 0 , 1 , 0 , 0 , 0 , 1 , 0,
    11, 0 , 0 , 0 , 1 , 0 , 0 , 0,
    11, 0 , 1 , 0 , 0 , 0 , 1 , 0,
    11, 0 , 0 , 0 , 3 , 0 , 0 , 0,
    11, 0 , 1 , 0 , 0 , 0 , 1 , 0,
    11, 0 , 0 , 0 , 1 , 0 , 0 , 0,
    11, 0 , 1 , 0 , 0 , 0 , 1 , 0,
    11, 0 , 0 , 0 , 1 , 0 , 0 , 0,
  }, {
    // BLOCK 04
    0 , 0 , 1 , 0 , 0 , 0 , 1 , 0,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
    0 , 0 , 1 , 0 , 0 , 0 , 1 , 0,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
    0 , 0 , 1 , 0 , 0 , 0 , 1 , 0,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
    0 , 0 , 3 , 0 , 0 , 0 , 1 , 0,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
  }, {
    // BLOCK 05
    0 , 0 , 1 , 0 , 0 , 0 , 0 , 11,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
    0 , 0 , 1 , 0 , 0 , 4 , 0 , 11,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
    0 , 0 , 1 , 0 , 0 , 0 , 0 , 11,
    3 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
    0 , 0 , 1 , 0 , 0 , 0 , 0 , 11,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
  }, {
    // BLOCK 06
    11 , 0 , 1 , 0 , 0 , 0 , 1 , 0,
    11 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
    11 , 0 , 1 , 0 , 0 , 0 , 1 , 0,
    11 , 0 , 0 , 0 , 4 , 0 , 0 , 0,
    11 , 0 , 1 , 0 , 0 , 0 , 1 , 0,
    11 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
    11 , 0 , 0 , 0 , 0 , 0 , 0 , 0,
    11 , 11 , 11 , 11 , 11 , 11 , 11 , 11,
  }, {
    // BLOCK 07
    0 , 0 , 1 , 0 , 0 , 0 , 1 , 0,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
    0 , 0 , 1 , 0 , 0 , 0 , 3 , 0,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
    0 , 0 , 1 , 0 , 0 , 0 , 1 , 0,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
    0 , 0 , 0 , 0 , 0 , 0 , 0 , 0,
    11 , 11 , 11 , 11 , 11 , 11 , 11 , 11,
  }, {
    // BLOCK 08
    0 , 0 , 1 , 0 , 0 , 0 , 0 , 11,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
    0 , 0 , 1 , 0 , 0 , 0 , 0 , 11,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
    0 , 0 , 1 , 0 , 0 , 0 , 0 , 11,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
    0 , 0 , 0 , 0 , 0 , 0 , 0 , 11,
    11 , 11 , 11 , 11 , 11 , 11 , 11 , 11,
  }, {
    // BLOCK 09
    0 , 0 , 1 , 0 , 0 , 0 , 1 , 0,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
    0 , 0 , 12 , 14 , 18 , 22 , 1 , 0,
    1 , 0 , 13 , 15 , 19 , 23 , 0 , 0,
    0 , 0 , 1 , 16 , 20 , 0 , 1 , 0,
    1 , 0 , 0 , 17 , 21 , 0 , 0 , 0,
    0 , 0 , 1 , 0 , 0 , 0 , 3 , 0,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
  }, {
    // BLOCK 10
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
    2 , 24 , 26 , 2 , 2 , 24 , 26 , 2,
    2 , 25 , 27 , 2 , 2 , 25 , 27 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
    2 , 2 , 2 , 2 , 5 , 2 , 2 , 2,
    2 , 24 , 26 , 2 , 2 , 24 , 26 , 2,
    2 , 25 , 27 , 2 , 2 , 25 , 27 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
  }, {
    // BLOCK 11
    11 , 11 , 11 , 11 , 11 , 11 , 11 , 11,
    6 , 6 , 6 , 6 , 6 , 6 , 6 , 6,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
    2 , 24 , 26 , 2 , 2 , 24 , 26 , 2,
    2 , 25 , 27 , 2 , 2 , 25 , 27 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
  }, {
    // BLOCK 12
    2, 2 , 2 , 2 , 2 , 2 , 2 , 2,
    2 , 24 , 26 , 2 , 2 , 24 , 26 , 2,
    2 , 25 , 27 , 2 , 2 , 25 , 27 , 2,
    2 , 3 , 2 , 2 , 2 , 3 , 2 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
    11 , 11 , 11 , 11 , 11 , 11 , 11 , 11,
  }, {
    // BLOCK 13
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
    1 , 2 , 3 , 2 , 2 , 2 , 4 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 3,
    2 , 5 , 2 , 2 , 2 , 2 , 2 , 2,
    2 , 2 , 2 , 2 , 4 , 2 , 2 , 2,
    2 , 2 , 2 , 2 , 2 , 2 , 2 , 2,
  }, {
    // BLOCK 14
    0 , 0 , 1 , 0 , 0 , 0 , 0 , 11,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
    0 , 0 , 12 , 14 , 18 , 22 , 0 , 11,
    1 , 0 , 13 , 15 , 19 , 23 , 0 , 11,
    0 , 0 , 1 , 16 , 20 , 0 , 0 , 11,
    1 , 0 , 0 , 17 , 21 , 0 , 0 , 11,
    0 , 0 , 1 , 0 , 0 , 0 , 0 , 11,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 11,
  }, {
    // BLOCK 15
    11 , 11 , 11 , 11 , 11 , 11 , 11 , 11,
    6 , 38 , 37 , 37 , 37 , 37 , 36 , 6,
    0 , 39 , 39 , 39 , 35 , 35 , 35 , 0,
    1 , 39 , 39 , 39 , 35 , 35 , 35 , 0,
    0 , 32 , 33 , 33 , 33 , 33 , 34 , 0,
    1 , 28 , 29 , 30 , 31 , 30 , 31 , 0,
    0 , 7 , 8 , 9 , 10 , 9 , 10 , 0,
    1 , 0 , 0 , 0 , 1 , 0 , 0 , 0,
  }
};



PROGMEM const unsigned char maps[16][16] = {
  {
    // map 00
    0x01, 0x11, 0x11, 0x12,
    0x39, 0x5F, 0x4F, 0xF5,
    0x39, 0x54, 0x44, 0x45,
    0x67, 0x87, 0x77, 0x78
  }, {
    // map 01
    0x01, 0x11, 0x11, 0x12,
    0x35, 0xFF, 0x39, 0x9E,
    0x02, 0x47, 0x01, 0x45,
    0x67, 0x77, 0x77, 0x78
  }, {
    // map 02
    0x01, 0x11, 0x11, 0x12,
    0x35, 0xFF, 0x4F, 0xFE,
    0x02, 0x44, 0x40, 0x4E,
    0x67, 0x77, 0x77, 0x78,
  }, {
    // map 03
    0x0B, 0xBB, 0x11, 0x12,
    0x3D, 0xAD, 0x0F, 0x25,
    0x3D, 0xAA, 0x64, 0x85,
    0x6C, 0xCC, 0x77, 0x78,
  }, {
    // map 04
    0x0F, 0x1B, 0xB1, 0xF2,
    0x39, 0x3D, 0xD5, 0x95,
    0x39, 0x0B, 0xB2, 0x95,
    0x67, 0x7C, 0xC7, 0x78,
  }, {
    // map 05
    0x01, 0x11, 0x11, 0x12,
    0x3D, 0x3F, 0x02, 0xDE,
    0x3A, 0x67, 0x3E, 0xDE,
    0x6C, 0xCC, 0x77, 0x78,
  }, {
    // map 06
    0x0F, 0x12, 0x11, 0xF2,
    0x34, 0x94, 0x44, 0x9E,
    0x01, 0x14, 0x91, 0x12,
    0x67, 0x78, 0x77, 0x78,
  }, {
    // map 07
    0x01, 0x11, 0x11, 0x12,
    0x3F, 0x24, 0x40, 0xF5,
    0x34, 0x8B, 0xB6, 0x45,
    0x67, 0x77, 0x77, 0x78,
  }, {
    // map 08
    0x01, 0x11, 0x11, 0x12,
    0x3F, 0x14, 0x24, 0x25,
    0x39, 0x46, 0x84, 0x85,
    0x67, 0x77, 0x77, 0x78,
  }, {
    // map 09
    0x01, 0x11, 0x11, 0x12,
    0x30, 0x1F, 0xF1, 0x95,
    0x39, 0x77, 0x77, 0x85,
    0x67, 0x77, 0x77, 0x78,
  }, {
    // map 10
    0x02, 0xF2, 0xF2, 0xF2,
    0x34, 0x4E, 0x44, 0x4E,
    0x3E, 0x44, 0x4E, 0x45,
    0x68, 0x78, 0x78, 0x78,
  }, {
    // map 11
    0x00, 0x11, 0x11, 0x12,
    0x31, 0xF3, 0xF0, 0xF5,
    0x36, 0x73, 0x46, 0x7E,
    0x67, 0x77, 0x76, 0x78,
  }, {
    // map 12
    0x00, 0x11, 0x11, 0x12,
    0x33, 0xF6, 0x8F, 0x25,
    0x36, 0x77, 0x78, 0x85,
    0x67, 0x77, 0x77, 0x78,
  }, {
    // map 13
    0x0F, 0x0F, 0x0F, 0x12,
    0x34, 0x34, 0x34, 0x45,
    0x31, 0x34, 0x42, 0xAE,
    0x67, 0x77, 0x68, 0xC8,
  }, {
    // map 14
    0x01, 0x11, 0x11, 0x12,
    0x68, 0xF1, 0xF2, 0x9E,
    0x34, 0x47, 0x78, 0x9E,
    0x67, 0x77, 0x77, 0x78,
  }, {
    // map 15
    0x0F, 0x0F, 0x0F, 0x02,
    0x37, 0x37, 0x37, 0x3E,
    0x39, 0x49, 0x49, 0x4E,
    0x67, 0x77, 0x77, 0x78
  }
};


PROGMEM const unsigned char tileset[] = {
  // width, height
  8, 8,
  // file 0
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  // tile 1
  0x00, 0x00, 0x30, 0x00, 0x20, 0x10, 0x00, 0x00,
  // tile 2
  0x04, 0x80, 0x00, 0x00, 0x20, 0x00, 0x02, 0x00,
  // tile 3
  0x08, 0x14, 0x08, 0xE2, 0x45, 0x12, 0x28, 0x10,
  // tile 4
  0x0C, 0x0E, 0x6A, 0xF6, 0xB0, 0x90, 0x60, 0x00,
  // tile 5
  0x1E, 0xB3, 0xDF, 0xDF, 0xB3, 0x93, 0x5F, 0x0E,
  // tile 6
  0x00, 0xCF, 0x30, 0x03, 0x04, 0x18, 0x64, 0x83,
  // tile 7
  0xAA, 0x15, 0xBF, 0x00, 0x7F, 0x43, 0x40, 0x40,
  // tile 8
  0x40, 0x40, 0x40, 0x7F, 0x00, 0xBF, 0x15, 0xAA,
  // tile 9
  0x3F, 0xBF, 0x20, 0xA1, 0x20, 0xA0, 0x20, 0xA0,
  // tile 10
  0x20, 0xA0, 0x20, 0xA0, 0x20, 0xA0, 0x3F, 0xBF,
  // tile 11
  0x6D, 0xFB, 0xBF, 0x57, 0xED, 0xBD, 0xDB, 0xEE,
  // tile 12
  0x80, 0x40, 0x60, 0x80, 0x64, 0x0C, 0xF0, 0x40,
  // tile 13
  0x09, 0x2A, 0x12, 0x24, 0x27, 0x48, 0xB3, 0xCC,
  // tile 14
  0x3C, 0x08, 0xC4, 0xB6, 0x24, 0x92, 0x48, 0x17,
  // tile 15
  0x8E, 0x55, 0x68, 0x92, 0x64, 0x0C, 0xF1, 0x42,
  // tile 16
  0x09, 0x2A, 0x12, 0x24, 0x27, 0x48, 0xB3, 0xCC,
  // tile 17
  0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x3F, 0xFF,
  // tile 18
  0xB0, 0x53, 0x6C, 0x82, 0x64, 0x0C, 0xF1, 0x42,
  // tile 19
  0x3F, 0x08, 0xC4, 0xB6, 0x24, 0x92, 0x48, 0x03,
  // tile 20
  0x7E, 0xE1, 0x5C, 0x42, 0x39, 0x25, 0x51, 0x0A,
  // tile 21
  0x3D, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  // tile 22
  0x3E, 0x08, 0xC4, 0xB4, 0x20, 0x90, 0x00, 0x00,
  // tile 23
  0x5E, 0xE1, 0x5C, 0x42, 0x39, 0x25, 0x51, 0x0A,
  // tile 24
  0x00, 0xF8, 0x04, 0xE6, 0xA2, 0x62, 0x02, 0xC2,
  // tile 25
  0x20, 0x07, 0x54, 0x09, 0xA8, 0x09, 0x50, 0x13,
  // tile 26
  0x06, 0x86, 0x86, 0x8C, 0x1C, 0xF8, 0xF0, 0x00,
  // tile 27
  0x50, 0x17, 0xA2, 0x23, 0xA0, 0x7F, 0x7F, 0x00,
  // tile 28
  0xAA, 0x54, 0xFE, 0x02, 0xFA, 0x0A, 0x0A, 0x0A,
  // tile 29
  0x0A, 0x0A, 0x0A, 0xFA, 0x02, 0xFE, 0x54, 0xAA,
  // tile 30
  0xFE, 0xFE, 0x06, 0x26, 0x86, 0x46, 0x26, 0x06,
  // tile 31
  0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0xFE, 0xFE,
  // tile 32
  0x6F, 0xDF, 0xB8, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7,
  // tile 33
  0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7,
  // tile 34
  0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB8, 0xDF, 0x6F,
  // tile 35
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF,
  // tile 36
  0xE3, 0xE3, 0xE3, 0xE3, 0xC3, 0x07, 0xFE, 0xFC,
  // tile 37
  0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3,
  // tile 38
  0xFC, 0xFE, 0x07, 0xC3, 0xE3, 0xE3, 0xE3, 0xE3,
  // tile 39
  0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};


#endif
